{"version":3,"sources":["util/Spotify.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["accessToken","SearchBar","props","state","term","search","bind","handleTermChange","this","onSearch","e","setState","target","value","className","onChange","placeholder","onClick","React","Component","Track","addTrack","removeTrack","isRemoval","onAdd","track","onRemove","name","artist","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","Playlist","handleNameChange","onNameChange","defaultValue","playlistTracks","onSave","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessURL","alert","fetch","headers","Authorization","then","response","json","jsonResponse","items","artists","album","uri","savePlayList","trackURIs","userID","length","method","body","JSON","stringify","playlistID","uris","App","playlistName","updatePlaylistName","savePlaylist","trackList","find","x","push","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.263411ce.chunk.js","sourcesContent":["const clientId = 'e6e2d55451be4c788e15142efa468fc0';\r\nconst redirectURI = 'http://johnpaul85.github.io/jammming';\r\nlet accessToken;\r\n\r\nexport const Spotify = {\r\n    getAccessToken () {\r\n        if(accessToken){\r\n            return accessToken;\r\n        }\r\n\r\n        // check for access token match\r\n        const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n        const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n    \r\n        if(accessTokenMatch && expiresInMatch){\r\n            accessToken = accessTokenMatch[1];\r\n            const expiresIn = Number(expiresInMatch[1]);\r\n            // clear parameters\r\n            window.setTimeout(() => accessToken = '', expiresIn * 1000);\r\n            window.history.pushState('Access Token', null, '/');\r\n            return accessToken;\r\n        } else {\r\n            const accessURL = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURI}`;\r\n            alert(accessURL);\r\n            window.location = accessURL;\r\n        }\r\n    },\r\n\r\n    search(term){\r\n        accessToken = Spotify.getAccessToken();\r\n        return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, { \r\n                headers: {Authorization: `Bearer ${accessToken}`}\r\n        }).then(response => {\r\n            return response.json();\r\n        }).then(jsonResponse => {\r\n            if (!jsonResponse.tracks) {\r\n                return [];\r\n            }\r\n            return jsonResponse.tracks.items.map(track => ({\r\n                id: track.id,\r\n                name: track.name,\r\n                artist: track.artists[0].name,\r\n                album: track.album.name,\r\n                uri: track.uri\r\n            }));\r\n        })\r\n    },\r\n\r\n    savePlayList(name, trackURIs){\r\n        if(!name || !trackURIs.length){\r\n            return;\r\n        }\r\n        accessToken = Spotify.getAccessToken();\r\n        let userID;\r\n\r\n        return fetch('https://api.spotify.com/v1/me', { \r\n            headers: {Authorization: `Bearer ${accessToken}`} \r\n        }).then(response => {\r\n            return response.json();\r\n        }).then(jsonResponse => {\r\n            userID = jsonResponse.id;\r\n            return fetch(`https://api.spotify.com/v1/users/${userID}/playlists`,\r\n            {\r\n                headers: {Authorization: `Bearer ${accessToken}`},\r\n                method: 'POST',\r\n                body: JSON.stringify({name: name})\r\n            }).then(response => response.json()\r\n            ).then(jsonResponse => {\r\n                const playlistID = jsonResponse.id;\r\n                return fetch(`https://api.spotify.com/v1/users/${userID}/playlists/${playlistID}/tracks`, {\r\n                    headers: {Authorization: `Bearer ${accessToken}`},\r\n                    method: 'POST',\r\n                    body: JSON.stringify({ uris: trackURIs })\r\n                })\r\n            })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nexport class SearchBar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.search = this.search.bind(this);\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n    }\r\n    search(){\r\n        this.props.onSearch(this.state.term);\r\n    }\r\n    handleTermChange(e){\r\n        this.setState({term: e.target.value});\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <input onChange={this.handleTermChange} placeholder=\"Enter A Song, Album, or Artist\" />\r\n                <button onClick={this.search} className=\"SearchButton\">SEARCH</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './Track.css';\r\n\r\nexport class Track extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.addTrack = this.addTrack.bind(this);\r\n        this.removeTrack = this.removeTrack.bind(this);\r\n    }\r\n    renderAction(){\r\n        if(this.props.isRemoval) {\r\n            return <button className=\"Track-action\" onClick={this.removeTrack}>-</button>\r\n        } else {\r\n            return <button className=\"Track-action\" onClick={this.addTrack}>+</button>\r\n        }\r\n    }\r\n\r\n    addTrack(){\r\n        this.props.onAdd(this.props.track);\r\n    }\r\n\r\n    removeTrack(){\r\n        this.props.onRemove(this.props.track);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"Track\">\r\n                <div className=\"Track-information\">\r\n                    <h3>{this.props.track.name}</h3>\r\n                    <p>{this.props.track.artist} | {this.props.track.artist}</p>\r\n                </div>\r\n                {this.renderAction()}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './TrackList.css';\r\nimport {Track} from '../Track/Track';\r\n\r\nexport class TrackList extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className=\"TrackList\">\r\n                {\r\n                    this.props.tracks.map(track => {\r\n                        return <Track track={track}\r\n                                    key={track.id}\r\n                                    onAdd={this.props.onAdd}\r\n                                    onRemove={this.props.onRemove}\r\n                                    isRemoval={this.props.isRemoval} \r\n                                    />\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './SearchResults.css';\r\nimport {TrackList} from '../TrackList/TrackList';\r\n\r\nexport class SearchResults extends React.Component {\r\n    render(){\r\n        return (\r\n            <div className=\"SearchResults\">\r\n                <h2>Results</h2>\r\n                <TrackList tracks={this.props.searchResults}\r\n                        onAdd={this.props.onAdd}\r\n                        isRemoval={false} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './Playlist.css';\r\nimport {TrackList} from '../TrackList/TrackList';\r\n\r\nexport class Playlist extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n    }\r\n    handleNameChange(e){\r\n        this.props.onNameChange(e.target.value);\r\n    }\r\n    render(){\r\n        return(\r\n        <div className=\"Playlist\">\r\n            <input defaultValue={\"New Playlist\"} onChange={this.handleNameChange} />\r\n            <TrackList tracks={this.props.playlistTracks}\r\n                    onRemove={this.props.onRemove}\r\n                    isRemoval={true} />\r\n            <button className=\"Playlist-save\" onClick={this.props.onSave}>SAVE TO SPOTIFY</button>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport {SearchBar} from '../SearchBar/SearchBar';\nimport {SearchResults} from '../SearchResults/SearchResults';\nimport {Playlist} from '../Playlist/Playlist';\nimport {Spotify} from '../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'My Playlist',\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n  addTrack(track){\n    let trackList = this.state.playlistTracks;\n    if(trackList.find(x => x.id === track.id)){\n      return;\n    }\n    trackList.push(track);\n    this.setState({playlistTracks: trackList});\n  }\n  removeTrack(track){\n    let trackList = this.state.playlistTracks;\n    trackList = trackList.filter(x => x.id !== track.id);\n    this.setState({playlistTracks: trackList});\n  }\n  updatePlaylistName(name){\n    this.setState({playlistName: name});\n  }\n  savePlaylist(){\n    const trackURIs = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlayList(this.state.playlistName, trackURIs).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      })\n    })\n  }\n  search(term){\n    Spotify.search(term).then(searchResults => {\n      this.setState({searchResults: searchResults})\n    });\n  }\n  render(){\n    return (\n    <div>\n      <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n      <div className=\"App\">\n        <SearchBar onSearch={this.search}/>\n        <div className=\"App-playlist\">\n          <SearchResults searchResults={this.state.searchResults}\n                  onAdd={this.addTrack}/>\n          <Playlist playlistName={this.state.playlistName} \n                  playlistTracks={this.state.playlistTracks}\n                  onRemove={this.removeTrack}\n                  onNameChange={this.updatePlaylistName}\n                  onSave={this.savePlaylist} />\n        </div>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}